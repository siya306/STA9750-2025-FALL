---
title: "Mini-Project #01"
author: "Siya Aneja"
---
# Acquire Data
```{r}
if(!dir.exists(file.path("data", "mp01"))){
    dir.create(file.path("data", "mp01"), showWarnings=FALSE, recursive=TRUE)
}

GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.csv")

if(!file.exists(GLOBAL_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                  destfile=GLOBAL_TOP_10_FILENAME)
}


COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")


if(!file.exists(COUNTRY_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                  destfile=COUNTRY_TOP_10_FILENAME)
}
```

# Data Import and Preparation
```{r}
if(!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)


GLOBAL_TOP_10 <- read_tsv("data/mp01/global_top10_alltime.csv")


GLOBAL_TOP_10 <- GLOBAL_TOP_10 %>%
  mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))


str(GLOBAL_TOP_10)
glimpse(GLOBAL_TOP_10)


COUNTRY_TOP_10 <- read_tsv(
  "data/mp01/country_top10_alltime.csv",
  na = "N/A"
)


str(COUNTRY_TOP_10)
glimpse(COUNTRY_TOP_10)
```

# Initial Data Exploration
```{r}
library(DT)
GLOBAL_TOP_10 |> 
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE))
    
library(stringr)
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}

GLOBAL_TOP_10 |> 
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))  
    
GLOBAL_TOP_10 |> 
    select(-season_title) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))    
    
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, 
           -runtime) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))    
 
```
 
# Exploratory Questions
 
# 1. How many different countries does Netflix operate in?  

```{r}
library(dplyr)
num_countries <- COUNTRY_TOP_10 %>%
  distinct(country_name) %>%
  nrow()
num_countries
```
The number of countries Netflix operates in is `r num_countries`.

# 2. Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?

```{r}
non_english_top <- GLOBAL_TOP_10 %>%
  filter(!str_detect(category,"Films English")) %>%
  arrange(desc(cumulative_weeks_in_top_10)) %>%
  slice_head(n = 1) %>%
  select(show_title, cumulative_weeks_in_top_10)

non_english_top
```
The non-English-language film that spent the most cumulative weeks in the global Top 10 is `r non_english_top$show_title`, with `r non_english_top$cumulative_weeks_in_top_10` weeks.

# 3. What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?

```{r}
longest_film <- GLOBAL_TOP_10 %>%
  mutate(runtime_minutes = round(runtime * 60)) %>%
  arrange(desc(runtime_minutes)) %>%
  slice_head(n = 1) %>%
  select(show_title, runtime_minutes)

longest_film
```
The longest film to appear in the global Top 10 is `r longest_film$show_title`, with a runtime of `r longest_film$runtime_minutes` minutes.

# 4. For each of the four categories, what program has the most total hours of global viewership?

```{r}
top_viewed_per_category <- GLOBAL_TOP_10 %>%
  group_by(category) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
            show_title = show_title[which.max(weekly_hours_viewed)]) %>%
  arrange(category)

top_viewed_per_category
```
```{r}
library(DT)
top_viewed_per_category %>%
  datatable(options=list(searching=FALSE, info=FALSE))
```

# 5. Which TV show had the longest run in a countryâ€™s Top 10? How long and where?
```{r}
library(dplyr)
library(DT)

longest_run <- COUNTRY_TOP_10 %>%
  filter(cumulative_weeks_in_top_10 == max(cumulative_weeks_in_top_10, na.rm = TRUE)) %>%
  select(show_title, country_name, cumulative_weeks_in_top_10) %>%
  distinct()

# Display as interactive table
datatable(longest_run, 
          options = list(searching = FALSE, info = FALSE),
          rownames = FALSE)
```

# 6. Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?
```{r}
library(dplyr)
library(lubridate)

country_short_history <- COUNTRY_TOP_10 %>%
  group_by(country_name) %>%
  summarise(
    total_weeks = n_distinct(week),    # count unique weeks, not rows
    last_week = max(week)
  ) %>%
  filter(total_weeks < 200)

country_short_history

```
The country with less than 200 weeks of Netflix service is `r country_short_history$country_name`, which ceased operations on `r country_short_history$last_week`.

# 7. What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.

```{r}
squid_game_hours <- GLOBAL_TOP_10 %>%
  filter(str_detect(show_title, "Squid Game")) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE))

squid_game_hours
```
The total global viewership of Squid Game across all seasons is `r squid_game_hours$total_hours` hours.

# 8. The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021? Note that Netflix does not provide the weekly_views values that far back in the past, but you can compute it yourself using the total view time and the runtime.
```{r}
red_notice_views <- GLOBAL_TOP_10 %>%
  filter(str_detect(show_title, "Red Notice") & year(week) == 2021) %>%
  mutate(views_estimate = weekly_hours_viewed / (1 + 58/60)) %>%
  summarise(total_views = sum(views_estimate, na.rm = TRUE))

red_notice_views
```

Red Notice received approximately `r round(red_notice_views$total_views)` views in 2021.

# 9. How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off?
```{r}
library(dplyr)
library(stringr)

# Filter US films and summarize
us_films <- COUNTRY_TOP_10 %>%
  filter(country_iso2 == "US", str_detect(category, "Films")) %>%
  group_by(show_title) %>%
  summarise(
    first_rank = min(weekly_rank, na.rm = TRUE),
    ever_number1 = any(weekly_rank == 1, na.rm = TRUE),
    last_week = max(week, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  filter(first_rank > 1 & ever_number1) %>%
  arrange(desc(last_week))

# Number of films
num_us_films <- nrow(us_films)

# Most recent film to reach #1
most_recent_film <- us_films$show_title[1]

# Inline code in Quarto
num_us_films   # use in text: `r num_us_films`
most_recent_film  # use in text: `r most_recent_film`

```
The number of Films that reached Number 1 in the US but did not debut there is `r nrow(us_films)`.

# 10. Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?
```{r}
library(dplyr)
library(lubridate)

top_show <- COUNTRY_TOP_10 %>%
  group_by(show_title, country_name) %>%
  summarise(debut_week = min(week), .groups = "drop") %>%
  group_by(show_title, debut_week) %>%
  summarise(num_countries = n(), .groups = "drop") %>%
  slice_max(num_countries, n = 1) %>% 
  slice(1)                             

top_show$show_title   
top_show$num_countries  

```
The TV show/season that hit the top 10 in the most countries in its debut week is `r top_show$show_title`, appearing in `r top_show$num_countries` countries.


